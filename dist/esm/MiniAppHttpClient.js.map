{"version":3,"file":"MiniAppHttpClient.js","sourceRoot":"","sources":["../../src/MiniAppHttpClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\n\r\nexport class MiniAppHttpClient extends HttpClient {\r\n\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const requestObj: any = {};\r\n            let task: any = null;\r\n\r\n            requestObj.url = request.url;\r\n            requestObj.method = request.method;\r\n            requestObj.dataType = \"text\";\r\n            requestObj.header = {\r\n                \"content-type\": \"text/plain;charset=UTF-8\",\r\n            };\r\n            requestObj.data = request.content || \"\";\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        requestObj.header[header] = headers[header];\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                requestObj.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    if (task != null) {\r\n                        task.abort();\r\n                    }\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            requestObj.success = (res: any) => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (res.statusCode >= 200 && res.statusCode < 300) {\r\n                    resolve(new HttpResponse(res.statusCode, res.statusCode.toString(), res.data));\r\n                } else {\r\n                    reject(new HttpError(\"request failed.\", res.statusCode));\r\n                }\r\n            };\r\n\r\n            requestObj.fail = () => {\r\n                reject(new HttpError(\"request failed.\", 0));\r\n            };\r\n\r\n            task = wx.request(requestObj);\r\n        });\r\n    }\r\n}\r\n"]}