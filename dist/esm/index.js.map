{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G;AAE/G,6DAA6D;AAC7D,yCAAyC;AACzC,MAAM,CAAC,IAAM,OAAO,GAAW,iBAAiB,CAAC;AAIjD,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAC/D,OAAO,EAAE,UAAU,EAAe,YAAY,EAAE,MAAM,cAAc,CAAC;AACrE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAExD,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAwN,MAAM,gBAAgB,CAAC;AACnQ,OAAO,EAAW,QAAQ,EAAE,MAAM,WAAW,CAAC;AAC9C,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAc,MAAM,cAAc,CAAC;AAE7E,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\n\n// Everything that users need to access must be exported here. Including interfaces.\nexport { AbortSignal } from \"./AbortController\";\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage, PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\nexport { ILogger, LogLevel } from \"./ILogger\";\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\nexport { NullLogger } from \"./Loggers\";\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\n"]}