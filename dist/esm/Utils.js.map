{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../src/Utils.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAG/G,OAAO,EAAW,QAAQ,EAAE,MAAM,WAAW,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AAGvC,eAAe;AACf;IAAA;IAaA,CAAC;IAZiB,cAAU,GAAxB,UAAyB,GAAQ,EAAE,IAAY;QAC3C,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,UAAQ,IAAI,4BAAyB,CAAC,CAAC;SAC1D;IACL,CAAC;IAEa,QAAI,GAAlB,UAAmB,GAAQ,EAAE,MAAW,EAAE,IAAY;QAClD,yGAAyG;QACzG,IAAI,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,aAAW,IAAI,gBAAW,GAAG,MAAG,CAAC,CAAC;SACrD;IACL,CAAC;IACL,UAAC;AAAD,CAAC,AAbD,IAaC;;AAED,eAAe;AACf,MAAM,wBAAwB,IAAS,EAAE,cAAuB;IAC5D,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QACrB,MAAM,GAAG,2BAAyB,IAAI,CAAC,UAAY,CAAC;QACpD,IAAI,cAAc,EAAE;YAChB,MAAM,IAAI,iBAAe,iBAAiB,CAAC,IAAI,CAAC,MAAG,CAAC;SACvD;KACJ;SAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;QACjC,MAAM,GAAG,2BAAyB,IAAI,CAAC,MAAQ,CAAC;QAChD,IAAI,cAAc,EAAE;YAChB,MAAM,IAAI,iBAAe,IAAI,OAAI,CAAC;SACrC;KACJ;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,eAAe;AACf,MAAM,4BAA4B,IAAiB;IAC/C,IAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAElC,6DAA6D;IAC7D,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;QACb,IAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAChC,GAAG,IAAI,OAAK,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAG,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,0BAA0B;IAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,4CAA4C;AAC5C,eAAe;AACf,MAAM,wBAAwB,GAAQ;IAClC,OAAO,GAAG,IAAI,OAAO,WAAW,KAAK,WAAW;QAC5C,CAAC,GAAG,YAAY,WAAW;YAC3B,kEAAkE;YAClE,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,eAAe;AACf,MAAM,sBAA4B,MAAe,EAAE,aAAqB,EAAE,UAAsB,EAAE,GAAW,EAAE,kBAAgE,EAAE,OAA6B,EAAE,iBAA0B;;;;;;yBAElO,kBAAkB,EAAlB,wBAAkB;oBACJ,qBAAM,kBAAkB,EAAE,EAAA;;oBAAlC,KAAK,GAAG,SAA0B;oBACxC,IAAI,KAAK,EAAE;wBACP,OAAO;4BACH,GAAC,eAAe,IAAG,YAAU,KAAO;+BACvC,CAAC;qBACL;;;oBAGL,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAI,aAAa,kCAA6B,aAAa,CAAC,OAAO,EAAE,iBAAiB,CAAC,MAAG,CAAC,CAAC;oBAEjH,YAAY,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC;oBACpD,qBAAM,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;4BACxC,OAAO,SAAA;4BACP,OAAO,SAAA;4BACP,YAAY,cAAA;yBACf,CAAC,EAAA;;oBAJI,QAAQ,GAAG,SAIf;oBAEF,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAI,aAAa,uDAAkD,QAAQ,CAAC,UAAU,MAAG,CAAC,CAAC;;;;;CACzH;AAED,eAAe;AACf,MAAM,uBAAuB,MAA2B;IACpD,IAAI,MAAM,KAAK,SAAS,EAAE;QACtB,OAAO,IAAI,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;KAClD;IAED,IAAI,MAAM,KAAK,IAAI,EAAE;QACjB,OAAO,UAAU,CAAC,QAAQ,CAAC;KAC9B;IAED,IAAK,MAAkB,CAAC,GAAG,EAAE;QACzB,OAAO,MAAiB,CAAC;KAC5B;IAED,OAAO,IAAI,aAAa,CAAC,MAAkB,CAAC,CAAC;AACjD,CAAC;AAED,eAAe;AACf;IAII,iBAAY,cAAmC;QAC3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IAEM,sBAAI,GAAX,UAAY,IAAO;QACf,KAAuB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAlC,IAAM,QAAQ,SAAA;YACf,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;IACL,CAAC;IAEM,uBAAK,GAAZ,UAAa,GAAQ;QACjB,KAAuB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAlC,IAAM,QAAQ,SAAA;YACf,IAAI,QAAQ,CAAC,KAAK,EAAE;gBAChB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;SACJ;IACL,CAAC;IAEM,0BAAQ,GAAf;QACI,KAAuB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAlC,IAAM,QAAQ,SAAA;YACf,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACnB,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACvB;SACJ;IACL,CAAC;IAEM,2BAAS,GAAhB,UAAiB,QAA8B;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IACL,cAAC;AAAD,CAAC,AAnCD,IAmCC;;AAED,eAAe;AACf;IAII,6BAAY,OAAmB,EAAE,QAA8B;QAC3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAEM,qCAAO,GAAd;QACI,IAAM,KAAK,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC3C;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,UAAC,CAAC,IAAO,CAAC,CAAC,CAAC;SACnD;IACL,CAAC;IACL,0BAAC;AAAD,CAAC,AAnBD,IAmBC;;AAED,eAAe;AACf;IAGI,uBAAY,eAAyB;QACjC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAEM,2BAAG,GAAV,UAAW,QAAkB,EAAE,OAAe;QAC1C,IAAI,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE;YAClC,QAAQ,QAAQ,EAAE;gBACd,KAAK,QAAQ,CAAC,QAAQ,CAAC;gBACvB,KAAK,QAAQ,CAAC,KAAK;oBACf,OAAO,CAAC,KAAK,CAAC,MAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,UAAK,QAAQ,CAAC,QAAQ,CAAC,UAAK,OAAS,CAAC,CAAC;oBACjF,MAAM;gBACV,KAAK,QAAQ,CAAC,OAAO;oBACjB,OAAO,CAAC,IAAI,CAAC,MAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,UAAK,QAAQ,CAAC,QAAQ,CAAC,UAAK,OAAS,CAAC,CAAC;oBAChF,MAAM;gBACV,KAAK,QAAQ,CAAC,WAAW;oBACrB,OAAO,CAAC,IAAI,CAAC,MAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,UAAK,QAAQ,CAAC,QAAQ,CAAC,UAAK,OAAS,CAAC,CAAC;oBAChF,MAAM;gBACV;oBACI,mGAAmG;oBACnG,OAAO,CAAC,GAAG,CAAC,MAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,UAAK,QAAQ,CAAC,QAAQ,CAAC,UAAK,OAAS,CAAC,CAAC;oBAC/E,MAAM;aACb;SACJ;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AA3BD,IA2BC","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nimport { HttpClient } from \"./HttpClient\";\nimport { ILogger, LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\n\n/** @private */\nexport class Arg {\n    public static isRequired(val: any, name: string): void {\n        if (val === null || val === undefined) {\n            throw new Error(`The '${name}' argument is required.`);\n        }\n    }\n\n    public static isIn(val: any, values: any, name: string): void {\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n        if (!(val in values)) {\n            throw new Error(`Unknown ${name} value: ${val}.`);\n        }\n    }\n}\n\n/** @private */\nexport function getDataDetail(data: any, includeContent: boolean): string {\n    let detail = \"\";\n    if (isArrayBuffer(data)) {\n        detail = `Binary data of length ${data.byteLength}`;\n        if (includeContent) {\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\n        }\n    } else if (typeof data === \"string\") {\n        detail = `String data of length ${data.length}`;\n        if (includeContent) {\n            detail += `. Content: '${data}'.`;\n        }\n    }\n    return detail;\n}\n\n/** @private */\nexport function formatArrayBuffer(data: ArrayBuffer): string {\n    const view = new Uint8Array(data);\n\n    // Uint8Array.map only supports returning another Uint8Array?\n    let str = \"\";\n    view.forEach((num) => {\n        const pad = num < 16 ? \"0\" : \"\";\n        str += `0x${pad}${num.toString(16)} `;\n    });\n\n    // Trim of trailing space.\n    return str.substr(0, str.length - 1);\n}\n\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n        // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n        (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n\n/** @private */\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined, content: string | ArrayBuffer, logMessageContent: boolean): Promise<void> {\n    let headers;\n    if (accessTokenFactory) {\n        const token = await accessTokenFactory();\n        if (token) {\n            headers = {\n                [\"Authorization\"]: `Bearer ${token}`,\n            };\n        }\n    }\n\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\n\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n    const response = await httpClient.post(url, {\n        content,\n        headers,\n        responseType,\n    });\n\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\n}\n\n/** @private */\nexport function createLogger(logger?: ILogger | LogLevel) {\n    if (logger === undefined) {\n        return new ConsoleLogger(LogLevel.Information);\n    }\n\n    if (logger === null) {\n        return NullLogger.instance;\n    }\n\n    if ((logger as ILogger).log) {\n        return logger as ILogger;\n    }\n\n    return new ConsoleLogger(logger as LogLevel);\n}\n\n/** @private */\nexport class Subject<T> implements IStreamResult<T> {\n    public observers: Array<IStreamSubscriber<T>>;\n    public cancelCallback: () => Promise<void>;\n\n    constructor(cancelCallback: () => Promise<void>) {\n        this.observers = [];\n        this.cancelCallback = cancelCallback;\n    }\n\n    public next(item: T): void {\n        for (const observer of this.observers) {\n            observer.next(item);\n        }\n    }\n\n    public error(err: any): void {\n        for (const observer of this.observers) {\n            if (observer.error) {\n                observer.error(err);\n            }\n        }\n    }\n\n    public complete(): void {\n        for (const observer of this.observers) {\n            if (observer.complete) {\n                observer.complete();\n            }\n        }\n    }\n\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\n        this.observers.push(observer);\n        return new SubjectSubscription(this, observer);\n    }\n}\n\n/** @private */\nexport class SubjectSubscription<T> implements ISubscription<T> {\n    private subject: Subject<T>;\n    private observer: IStreamSubscriber<T>;\n\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\n        this.subject = subject;\n        this.observer = observer;\n    }\n\n    public dispose(): void {\n        const index: number = this.subject.observers.indexOf(this.observer);\n        if (index > -1) {\n            this.subject.observers.splice(index, 1);\n        }\n\n        if (this.subject.observers.length === 0) {\n            this.subject.cancelCallback().catch((_) => { });\n        }\n    }\n}\n\n/** @private */\nexport class ConsoleLogger implements ILogger {\n    private readonly minimumLogLevel: LogLevel;\n\n    constructor(minimumLogLevel: LogLevel) {\n        this.minimumLogLevel = minimumLogLevel;\n    }\n\n    public log(logLevel: LogLevel, message: string): void {\n        if (logLevel >= this.minimumLogLevel) {\n            switch (logLevel) {\n                case LogLevel.Critical:\n                case LogLevel.Error:\n                    console.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                case LogLevel.Warning:\n                    console.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                case LogLevel.Information:\n                    console.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                default:\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n                    console.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n            }\n        }\n    }\n}\n"]}